{"ast":null,"code":"var _jsxFileName = \"/Users/clementd/Documents/GitHub/mrp_system/client/src/components/drop-file-input/drop-file-input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './drop-file-input.css';\nimport { ImageConfig } from './imageConfig';\nimport uploadImg from '../../assets/cloud-upload-regular-240.png';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropFileInput = props => {\n  _s();\n  const wrapperRef = useRef(null);\n  const [fileList, setFileList] = useState([]);\n  const onDragEnter = () => wrapperRef.current.classList.add('dragover');\n  const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\n  const onDrop = () => wrapperRef.current.classList.remove('dragover');\n  const onFileDrop = e => {\n    const newFile = e.target.files[0];\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n  const fileRemove = file => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      className: \"drop-file-input\",\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: onDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-input__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop your files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        value: \"\",\n        onChange: onFileDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), fileList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-file-preview\",\n      children: fileList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-preview__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ImageConfig[item.type.split('/')[1]] || ImageConfig['default'],\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-file-preview__item__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.size, \"B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drop-file-preview__item__del\",\n          onClick: () => fileRemove(item),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true);\n};\n_s(DropFileInput, \"9iAumBGwGcaH0xbFrBB0J8bZ30w=\");\n_c = DropFileInput;\nDropFileInput.propTypes = {\n  onFileChange: PropTypes.func\n};\nexport default DropFileInput;\nvar _c;\n$RefreshReg$(_c, \"DropFileInput\");","map":{"version":3,"names":["React","useRef","useState","PropTypes","ImageConfig","uploadImg","DropFileInput","props","wrapperRef","fileList","setFileList","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","onFileDrop","e","newFile","target","files","updatedList","onFileChange","fileRemove","file","splice","indexOf","length","map","item","index","type","split","name","size","propTypes","func"],"sources":["/Users/clementd/Documents/GitHub/mrp_system/client/src/components/drop-file-input/drop-file-input.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './drop-file-input.css';\n\nimport { ImageConfig } from './imageConfig'; \nimport uploadImg from '../../assets/cloud-upload-regular-240.png';\n\nconst DropFileInput = props => {\n\n    const wrapperRef = useRef(null);\n\n    const [fileList, setFileList] = useState([]);\n\n    const onDragEnter = () => wrapperRef.current.classList.add('dragover');\n\n    const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\n\n    const onDrop = () => wrapperRef.current.classList.remove('dragover');\n\n    const onFileDrop = (e) => {\n        const newFile = e.target.files[0];\n        if (newFile) {\n            const updatedList = [...fileList, newFile];\n            setFileList(updatedList);\n            props.onFileChange(updatedList);\n        }\n    }\n\n    const fileRemove = (file) => {\n        const updatedList = [...fileList];\n        updatedList.splice(fileList.indexOf(file), 1);\n        setFileList(updatedList);\n        props.onFileChange(updatedList);\n    }\n\n    return (\n        <>\n            <div\n                ref={wrapperRef}\n                className=\"drop-file-input\"\n                onDragEnter={onDragEnter}\n                onDragLeave={onDragLeave}\n                onDrop={onDrop}\n            >\n                <div className=\"drop-file-input__label\">\n                    <img src={uploadImg} alt=\"\" />\n                    <p>Drag & Drop your files here</p>\n                </div>\n                <input type=\"file\" value=\"\" onChange={onFileDrop}/>\n            </div>\n            {\n                fileList.length > 0 ? (\n                    <div className=\"drop-file-preview\">\n                        {\n                            fileList.map((item, index) => (\n                                <div key={index} className=\"drop-file-preview__item\">\n                                    <img src={ImageConfig[item.type.split('/')[1]] || ImageConfig['default']} alt=\"\" />\n                                    <div className=\"drop-file-preview__item__info\">\n                                        <p>{item.name}</p>\n                                        <p>{item.size}B</p>\n                                    </div>\n                                    <span className=\"drop-file-preview__item__del\" onClick={() => fileRemove(item)}>x</span>\n                                </div>\n                            ))\n                        }\n                    </div>\n                ) : null\n            }\n        </>\n    );\n}\n\nDropFileInput.propTypes = {\n    onFileChange: PropTypes.func\n}\n\nexport default DropFileInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}